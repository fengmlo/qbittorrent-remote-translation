name: Build Pro

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

# on: push    # Default will running for every branch.

jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    if: github.repository == 'fengmlo/qbittorrent-remote-translation'
    steps:

    - uses: actions/checkout@v2
      with:
        repository: fengmlo/qb_remote
        token: ${{ secrets.access_token }} # `GitHub_PAT` is a secret that contains your PAT
        #path: my-tools
        ref: master
        fetch-depth: 0
        submodules: 'recursive'

    - run: |
        git pull
        #echo $(git log --branches --remotes=origin)
        git checkout $(git log --branches --remotes=origin -1 --pretty=format:'%D' | sed 's/.*, //g')
        git submodule update --remote
    # - run: git submodule update --init --recursive
    # - name: Checkout submodules # checkout rest
    #   shell: bash
    #   run: |
    #     # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
    #     git config --global url."https://github.com/".insteadOf "git@github.com:"
    #     auth_header="$(git config --local --get http.https://github.com/.extraheader)"
    #     git submodule sync --recursive
    #     git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    #     git submodule update --remote

    - name: Get key
      uses: RollyPeres/base64-to-path@v1
      with:
        filePath: ${{ github.workspace }}/android/key.jks
        encodedString: ${{ secrets.KEY }}

    - name: Get key properties
      uses: RollyPeres/base64-to-path@v1
      with:
        filePath: ${{ github.workspace }}/android/key.properties
        encodedString: ${{ secrets.KEY_PROPERTIES }}

    # Setup Java environment in order to build the Android app.
    - uses: actions/setup-java@v1
      with:
        java-version: '17.x'

    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
        flutter-version: 3.27.4

    #- run: git submodule init
    #- run: git submodule update

    # Get flutter dependencies.
    - run: flutter pub get

    # Check for any formatting issues in the code.
    #- run: flutter format --set-exit-if-changed .

    # Statically analyze the Dart code for any errors.
    #- run: flutter analyze .

    # Run widget tests for our flutter project.
    #- run: flutter test

    # Build apk.
    #- run: flutter build apk
    - run: flutter build apk --obfuscate --split-debug-info=./


    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v4
      with:
        name: release-apk
        #build/app/outputs/apk/release/app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk
